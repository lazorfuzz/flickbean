#!/home/apolysec/dev/Python-2.7.8/python
import cgi, cgitb, Cookie, base64, random
from os import environ


form = cgi.FieldStorage()
formtype = form.getvalue('formtype')
bean = form.getvalue('bean')
roast_type = form.getvalue('roasttype')
amount = form.getvalue('amount')
grinded = form.getvalue('grinded')
packaging = form.getvalue('packaging')
instructions = form.getvalue('instructions')
checkout = form.getvalue('checkout')
cart = form.getvalue('cart')
firstname = form.getvalue('firstname')
lastname = form.getvalue('lastname')
address = form.getvalue('address')
city = form.getvalue('city')
state = form.getvalue('state')
postalcode = form.getvalue('postalcode')
email = form.getvalue('email')
deleteorder = form.getvalue('deleteorder')
deleteorder_redr = form.getvalue('delredr')
modorder = form.getvalue('modorder')
confirmation = form.getvalue('confirmation')
orderID = ''
phones = ['4083910180@vtext.com', '4087064249@vtext.com', '4087060872@vtext.com']
current_cart = ''


def _check_cart():
    if environ.has_key('HTTP_COOKIE'):
        cookie_string=environ.get('HTTP_COOKIE')
        c=Cookie.SimpleCookie()
        c.load(cookie_string)
        try:
            cart = base64.b64decode(c['Cart'].value)
        except: return None
        return cart
    return None

def check_cart():
    if current_cart == '':
        return _check_cart()
    if len(current_cart) > 5:
        return current_cart
    else: 
        delete_all_cookies()
        return

def add_cookie():
    c = Cookie.SimpleCookie()
    old_cookie = check_cart()
    if old_cookie == None:
        c['Cart'] = base64.b64encode(bean + '|' + roast_type + '|' + amount + '|' + grinded + '|' + packaging + '|' + instructions + '\n')
    else:
        c['Cart'] = base64.b64encode(check_cart() + bean + '|' + roast_type+ '|' + amount + '|' + grinded + '|' + packaging + '|' + instructions + '\n')
    print c
    return

def delete_all_cookies():
    c = Cookie.SimpleCookie()
    c['Cart'] = base64.b64encode('deleted')
    c['Cart']['expires'] = 'Tue, 23-Oct-2012 17:10:51 GMT'
    print c
    return

def delete_cookie(order):
    old_cookie = check_cart()
    new_cookie = ''
    for line in old_cookie.split('\n'):
        if order in line or line == '':
            pass
        if order not in line and len(line) > 5:
            new_cookie += line + '\n'
    c = Cookie.SimpleCookie()
    c['Cart'] = base64.b64encode(new_cookie)
    print c
    return

def rand_arg():
    return random.randrange(100000, 10000000)

def modify_cookie(order):
    delete_cookie(order)
    print 'Content-type: text/html\r\n'
    print '<script>window.location="buildorder.flick?bean=' + order.split('|')[0].replace(' ', '%20') + '&formtype=order&eus=' + rand_arg() + '";</script>'

def get_paybutton():
    paybutton = '''<script async src="js/button.js?merchant=leontosy@gmail.com"
        data-button="buynow"
        data-type="form"
        data-shipping="4.80"
        data-size="large"
        data-name="Coffee Purchase"
        data-callback="Callback"
        data-amount="15"
        ></script>'''
    cart = check_cart().split('\n')[:-1]
    price = 0
    shipping = 0
    for item in cart:
        if '12|' in item:
            price += 15
            if shipping == 0: shipping += 4.80
            else: shipping += 3
        if '24|' in item:
            price += 27
            if shipping == 0: 
                shipping += 5.80
            else: 
                shipping += 3
        if '36|' in item:
            price += 37
            shipping += 6.80
        if '|jar' in item:
            price += 2
            shipping += 1
    paybutton = paybutton.replace('15', str(price))
    paybutton = paybutton.replace('4.80', str(shipping))
    return paybutton

def get_cart_prices():
    cart = check_cart().split('\n')[:-1]
    price = 0
    shipping = 0
    for item in cart:
        if '12|' in item:
            price += 15
            if shipping == 0: shipping += 4.80
            else: shipping += 1
        if '24|' in item:
            price += 27
            if shipping == 0: 
                shipping += 5.80
            else: 
                shipping += 1
        if '36|' in item:
            price += 37
            shipping += 6.80
        if '|jar' in item:
            price += 2
            shipping += 1
    return (price, shipping)

def get_dollars(price):
    price = str(price)
    data = price.split('.')
    if len(data[1]) > 2:
        price = price + '0'
    return price

def parse_cart():
    cart = check_cart().split('\n')[:-1]
    return '|'.join(cart)

cart_proto = '''<div class='col-md-8 col-md-offset-2' id='shadbox'>
                                <h2 style='text-align: center; font-size: 1.6em;'>BEANTYPE</h2>
                                <div class='row'>
                                  <div class='col-md-9'>
                                    <p id='finalroasttype'>Roast: ROASTTYPE</p>
                                    <p id='finalamount'>Amount: AMOUNT Oz.</p>
                                    <p id='finalgrinded'>Grinded: YES</p>
                                    <p id='finalpackage'>Packaging: PACKAGING</p>
                                    <p id='finalinstructions'>Additional Instructions: INSTRUCTS</p>
                                  </div>
                                  <div class='col-md-3'>
                                    <button class='coffeechoice' onclick='deleteOrder(this, "checkout");' id='BEANTYPE|ROASTTYPE|AMOUNT|YES|PACKAGING'>Delete</button>
                                    <button class='coffeechoice' onclick='modOrder(this);' id='BEANTYPE|ROASTTYPE|AMOUNT|YES|PACKAGING'>Modify</button>
                                  </div>
                                </div>
                                </div>'''

if not instructions:
    instructions = 'none'

if confirmation:
    with open('confirm.leon', 'r') as f:
        html = f.read()
    print html

if roast_type and not checkout:
    add_cookie()
    print 'Content-type: text/html\r\n'
    print '<script>window.location = "coffee.flick";</script>'
    exit()

if deleteorder:
    delete_cookie(deleteorder)
    print 'Content-type: text/html\r\n'
    if deleteorder_redr == 'checkout':
        print '<script>window.location="buildorder.flick?checkout=1&eus=' + rand_arg() + '";</script>'
    elif deleteorder_redr == 'cart':
        print '<script>window.location="buildorder.flick?cart=1&eus=' + rand_arg() + '";</script>'
    exit()

if modorder:
    modify_cookie(modorder)

if cart:
    with open('cart.leon', 'r') as f:
        html = f.read()
    if check_cart(): 
        cookie_cart = check_cart().split('\n')[:-1]
        for item in cookie_cart:
            cart_item = item.split('|')
            cart_final = cart_proto.replace('checkout', 'cart')
            cart_final = cart_final.replace('BEANTYPE', cart_item[0])
            cart_final = cart_final.replace('ROASTTYPE', cart_item[1])
            cart_final = cart_final.replace('AMOUNT', cart_item[2])
            cart_final = cart_final.replace('YES', cart_item[3])
            cart_final = cart_final.replace('PACKAGING', cart_item[4])
            cart_final = cart_final.replace('INSTRUCTS', cart_item[5])
            html = html.replace('<!--CARTHTML-->', '<!--CARTHTML-->' + cart_final)
        print 'Content-type: text/html\r\n'
        prices = get_cart_prices()
        html = html.replace('15.00', str(prices[0]) + '.00')
        html = html.replace('4.80', get_dollars(prices[1]))
        html = html.replace('19.80', get_dollars(prices[0] + prices[1]))
        print html
        exit()
    print 'Content-type: text/html\r\n'
    html = html.replace('15.00', '0')
    html = html.replace('4.80', '0')
    html = html.replace('19.80', '0')
    print html
    exit()

if checkout:
    with open('checkout.leon', 'r') as f:
        html = f.read()
    if not check_cart() and not roast_type: 
        print 'Content-type: text/html\r\n'
        html = html.replace('15.00', '0')
        html = html.replace('4.80', '0')
        html = html.replace('19.80', '0')
        print html 
        exit()
    if not check_cart() and roast_type:
        add_cookie()
        print 'Content-type: text/html\r\n'
        print '<script>window.location="buildorder.flick?checkout=1&eus=' + rand_arg() + '";</script>'
        exit()
    if check_cart() and roast_type:
        add_cookie()
        print 'Content-type: text/html\r\n'
        print '<script>window.location="buildorder.flick?checkout=1&eus=' + rand_arg() + '";</script>'
        exit()
    if check_cart() and not roast_type:
        cookie_cart = check_cart().split('\n')
        for item in cookie_cart[:-1]:
            cart_item = item.split('|')
            cart_final = cart_proto.replace('BEANTYPE', cart_item[0])
            cart_final = cart_final.replace('ROASTTYPE', cart_item[1])
            cart_final = cart_final.replace('AMOUNT', cart_item[2])
            cart_final = cart_final.replace('YES', cart_item[3])
            cart_final = cart_final.replace('PACKAGING', cart_item[4])
            cart_final = cart_final.replace('INSTRUCTS', cart_item[5])
            html = html.replace('<!--CARTHTML-->', '<!--CARTHTML-->' + cart_final)
        print 'Content-type: text/html\r\n'
        p_button = get_paybutton()
        html = html.replace('<!--PAYPALBUTTON-->', p_button)
        prices = get_cart_prices()
        html = html.replace('15.00', str(prices[0]) + '.00')
        html = html.replace('4.80', get_dollars(prices[1]))
        html = html.replace('19.80', get_dollars(prices[0] + prices[1]))
        html = html.replace('Callback', 'http://apolyse.com/flickbean/buildorder.flick?confirmation=1')
        html = html.replace('TOTALPRICE', get_dollars(prices[0] + prices[1]))
        print html
        exit()

print 'Content-type: text/html\r\n'

if not formtype and not checkout:
    print '<script>window.location = "coffee.flick";</script>'
    exit()

if formtype == 'order':
    with open('buildorder.leon', 'r') as f:
        html = f.read()
    html = html.replace('BEANTYPE', bean)
    print html
    exit()
